"""
Django settings for sports_project project.

Generated by 'django-admin startproject' using Django 3.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 's8yre73ls^l&=ok+4!m%@)@z5f++km-eakn%+wukukvj-6pf@r'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'marathon.apps.MarathonConfig',     #marathon app config here
    'gallery.apps.GalleryConfig',
    'home.apps.HomeConfig',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'ckeditor',
    'crispy_forms',
    # 'crispy_forms_foundation',
    # 'admin_reorder',
]

MIDDLEWARE = [
    # 'admin_reorder.middleware.ModelAdminReorder',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'sports_project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'marathon.context_processors.header_objects',
            ],
        },
    },
]

WSGI_APPLICATION = 'sports_project.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]
#STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
STATIC_URL = '/static/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'images')
MEDIA_URL = '/'

CRISPY_TEMPLATE_PACK = 'bootstrap4' #foundation-6
# from crispy_forms_foundation.settings import *

# ADMIN_REORDER = (
#     # Keep original label and models
#     'sites',

#     # Rename app
#     {'app': 'auth', 'label': 'Authorisation'},

#     # # Reorder app models
#     # {'app': 'marathon', 'models': ('marathon.Timer', 'marathon.Slider')},

#     {
#         'app': 'marathon',
#         'label': 'Homepage',
#         'models': (
#             'marathon.Slider',
#             'marathon.Timer',
#             'Testemonials',
#         )
#     }
# )


#CKEDITOR_BASEPATH = os.path.join(BASE_DIR, 'staticfiles/ckeditor')

# ADMIN_ORDERING = [
#     ('marathon', [
#         'Slider',
#         'Timer',
#         'Marathon',
#         'Testemonial',
#         'MarathonCategory',
#         'Affiliation',
#         'FAQ',
#         'MarathonBookingCategory',
#         'MarathonBooking',
#         'Itinerary',
#         'Gallery',
#         'MarathonGallery',
#         'GalleryCategory',
#         'KSCGallery',
#         'ImageGallery',
#     ])
# ]

# def get_app_list(self, request):
#     app_dict = self._build_app_dict(request)
#     for app_name, object_list in ADMIN_ORDERING:
#         app = app_dict[app_name]
#         app['models'].sort(key=lambda x: object_list.index(x['object_name']))
#         yield app

# from django.contrib import admin

# admin.AdminSite.get_app_list = get_app_list